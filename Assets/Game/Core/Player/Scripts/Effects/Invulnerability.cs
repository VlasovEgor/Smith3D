using System.Collections;
using UnityEngine;

public class Invulnerability : MonoBehaviour
{
   [SerializeField] private Health _health;
   [SerializeField] private float _timeInvulnerable;
   [Space] 
   [SerializeField] private GameObject _blinkObject;
   [SerializeField] private float _blinkInterval = 0.1f;
   
   private Coroutine _blinkCoroutine;
   
   public bool Invulnerable { get; private set; }

   private void Start()
   {
      _health.DamageRecived += StartInvulnerable;
   }

   private void OnDestroy()
   {
      _health.DamageRecived -= StartInvulnerable;
   }

   private void StartInvulnerable()
   {
      Invulnerable = true;
      _blinkCoroutine = StartCoroutine(Blink());
      Invoke(nameof(EndInvulnerable), _timeInvulnerable);
   }
   
   public void EndInvulnerable()
   {
      Invulnerable = false;
      _blinkObject.SetActive(true);
   }
   
   private IEnumerator Blink()
   {
      while (Invulnerable)
      {
         _blinkObject.SetActive(!_blinkObject.activeSelf);
         yield return new WaitForSeconds(_blinkInterval);
      }
   }
}
